<!DOCTYPE html>
<html lang="fr">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Chat</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f1f1f1;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }

    .chat-container {
      width: 400px;
      background: white;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      padding: 20px;
      display: flex;
      flex-direction: column;
    }

    .messages {
      flex-grow: 1;
      overflow-y: auto;
      margin-bottom: 20px;
      max-height: 300px;
    }

    .messages ul {
      padding: 0;
      list-style: none;
    }

    .messages li {
      background-color: #f7f7f7;
      padding: 10px;
      margin-bottom: 8px;
      border-radius: 5px;
      font-size: 14px;
    }

    #messageInput {
      padding: 10px;
      border-radius: 5px;
      border: 1px solid #ddd;
      font-size: 14px;
      width: 100%;
      margin-bottom: 10px;
    }

    #sendButton {
      padding: 10px;
      background-color: #4CAF50;
      color: white;
      border: none;
      border-radius: 5px;
      font-size: 16px;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    #sendButton:hover {
      background-color: #45a049;
    }
  </style>
</head>

<body>
  <div class="chat-container">
    <h2>Chat en Temps Réel</h2>
    <div class="messages" id="messages"></div>
    <input id="messageInput" type="text" placeholder="Tapez votre message..." />
    <button id="sendButton">Envoyer</button>
  </div>

  <script src="https://cdn.socket.io/4.7.2/socket.io.min.js"></script>
  <script>
    const socket = io('http://localhost:3000');
    const messageInput = document.getElementById("messageInput");
    const sendButton = document.getElementById("sendButton");
    const messagesList = document.getElementById("messages");

    // Fonction pour afficher les messages dans la fenêtre de chat
    const appendMessage = (message) => {
      const li = document.createElement("li");
      li.textContent = message;
      messagesList.appendChild(li);
      messagesList.scrollTop = messagesList.scrollHeight; // Scroll automatique
    }

    // Get old messages
    fetch("/v1/tchat/message")
      .then((response) => response.json())
      .then((data) => {
        data.messages.forEach((msg) => appendMessage(msg));
      });

    // Send message
    const sendMessage = async () => {
      const message = messageInput.value.trim();
      if (!message) return;

      try {
        const response = await fetch("/v1/tchat/message", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ message, socketId: socket.id }),
        });

        if (!response.ok) throw new Error("Erreur lors de l'envoi du message");

        messageInput.value = "";
      } catch (error) {
        console.error("Erreur :", error);
      }
    }
    sendButton.addEventListener("click", sendMessage);
    messageInput.addEventListener("keydown", (event) => {
      if (event.key === "Enter" && !event.shiftKey) {
        event.preventDefault();
        if (messageInput.value.trim() !== "") {
          sendMessage();
        }
      }
    });

    // When receive message
    socket.on("newMessage", (data) => {
      appendMessage(data);
    });
    // When receive private message
    socket.on("privateMessage", (data) => {
      appendMessage(data);
    });
  </script>
</body>

</html>
